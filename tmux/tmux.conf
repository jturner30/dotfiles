# Use C-s as prefix
unbind C-b
set -g prefix C-s
bind -r C-s send-prefix

# Use all 256 colors
set -g default-terminal "screen-256color"

is_mac='uname | grep -Fqs "Darwin"'
if-shell -b "$is_mac" 'set -g default-command "reattach-to-user-namespace -l zsh"'

# Status cribbed from solarized
set -g status-bg "#4e4e4e"
set -g status-fg "#ffffd7"
set -g status-right "#{?pane_synchronized,--SYNCED--,} #(battery -t -g white)  #(date '+%a, %b %d - %I:%M') "

set -g repeat-time 125

# Start windowing panes at 1
set -g base-index 1
set -g -q mouse on

# Quick reload configuration
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Break pane into new window
bind-key b break-pane -d

# List sessions
bind-key C-j choose-tree

# Quick horizontal and vertical splits
unbind %
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Resize panes using the arrow keys + modifier
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Up resize-pane -U 1
bind -n S-Down resize-pane -D 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Up resize-pane -U 5
bind -n C-Down resize-pane -D 5


# Easy move pane
bind C-k swap-pane -U

# Open new windows in the CWD
bind c new-window -c '#{pane_current_path}'

# Keep ability to scroll
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"

set -g escape-time 10
