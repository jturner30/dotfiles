dotdir=$(dirname $(readlink ~/.zshrc))

source "$dotdir/aliases.zsh"
source "$dotdir/key-bindings.zsh"
source "$dotdir/vi-mode.zsh"
source "$dotdir/functions.zsh"
source "$dotdir/options.zsh"


autoload -U colors && colors

function git_prompt() {
  if [[ $(git status 2>/dev/null) > 0 ]]; then
    if [[ $(echo $(git status) | grep "up-to-date") > 0 ]]; then
      prompt="%{$fg[blue]%}on branch $(git rev-parse --abbrev-ref HEAD)"
      if [[ $(git diff origin/$(git rev-parse --abbrev-ref HEAD)) > 0 ]]; then
        prompt="$prompt*"
      fi
      prompt=$prompt"%{$fg[reset_color]%}"
      echo $prompt
    else
      echo "%{$fg[red]%}on branch $(git rev-parse --abbrev-ref HEAD)%{$fg[reset_color]%}"
    fi
  else
    echo ""
  fi
}

function git_prompt_fast() {
  if [[ $(git status 2>/dev/null) > 0 ]]; then
    echo "%{$fg[blue]%}on branch $(git rev-parse --abbrev-ref HEAD)%{$fg[reset_color]%}"
  else
    echo ""
  fi
}

function lprompt(){
  if [[ $? == 0 ]]; then
    echo "%{$fg[blue]%}on %w at %t in %d:%{$fg[reset_color]%} "
  else
    echo "%{$fg[red]%}on %w at %t in %d:%{$fg[reset_color]%} "
  fi
}

function lprompt_fast(){
  echo "%{$fg[blue]%}on %w at %t in %d:%{$fg[reset_color]%} "
}

# No arguments: `git status`
# With arguments: acts like `git`
g() {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status
  fi
}

PROMPT='$(lprompt_fast)'
RPROMPT='$(git_prompt_fast)'
export GOPATH="$HOME/dev/golang/bin"
export PATH=$PATH:$GOPATH
export PATH="/usr/local/sbin:$PATH"
export PATH="$PATH:$HOME/my/scripts"
export PATH="$PATH:$HOME/.cargo/bin"

# Get zsh functions (there's a better way to do this probably)
# Mac
[[ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -f /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
# Linux
[[ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# Source completions
fpath=(/usr/local/share/zsh-completions $fpath)

setopt auto_cd

# Betterment computer, use custom cd path
if [[ $(whoami) == "jonathanturner" ]]; then
  source /opt/boxen/env.sh
  cdpath=(. $HOME $HOME/src/better-core $HOME/src/ $HOME/my $HOME/Dropbox)
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

if [[ $(uname) == 'Darwin' ]]; then
  [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh
else
  source /usr/share/autojump/autojump.sh
fi

eval "$(rbenv init -)"
