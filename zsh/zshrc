dotdir="$(dirname "$(readlink ~/.zshrc)")"

source "$dotdir/aliases.zsh"
source "$dotdir/key-bindings.zsh"
source "$dotdir/vi-mode.zsh"
source "$dotdir/functions.zsh"
source "$dotdir/options.zsh"

autoload -U colors && colors

# No arguments: `git status`
# With arguments: acts like `git`
g() {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status
  fi
}

autoload -U promptinit; promptinit
prompt pure

export GOPATH="$HOME/go"
export PATH="$PATH:$GOPATH/bin"
export PATH="/usr/local/sbin:$PATH"
export PATH="$PATH:$HOME/my/scripts"
export PATH="$PATH:$HOME/.cargo/bin"

# Get zsh functions (there's a better way to do this probably)
# Mac
[[ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -f /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
# Linux
[[ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# Source completions
fpath=(/usr/local/share/zsh-completions $fpath)

# Betterment computer, use custom cd path
# and set up some other stuff
if [[ $(whoami) == "jonathanturner" ]]; then
  export PATH="/usr/local/bin:$PATH"
  alias vpnconnect="osascript -e 'tell application \"Viscosity\" to connectall'"
  source "$HOME/.bootstrap/env.sh"

  ssh_to_instance() {
    bssh "$(aws ec2 describe-instances --instance-id "$1" | jq -r '.Reservations[0].Instances[0].PrivateIpAddress')"
  }


  alias prod-encrypt="pbpaste | ansible-vault encrypt_string --vault-password-file=~/.ssh/production.key"
  alias prod-decrypt="pbpaste | sed 's/^[[:space:]]*//g' | ansible-vault decrypt --vault-password-file=~/.ssh/production.key /dev/stdin --output=-"
  alias dev-encrypt="pbpaste | ansible-vault encrypt_string --vault-password-file=~/.ssh/development.key"
  alias dev-decrypt="pbpaste | sed 's/^[[:space:]]*//g' | ansible-vault decrypt --vault-password-file=~/.ssh/development.key /dev/stdin --output=-"
fi

if [[ $(uname) == 'Darwin' ]]; then
  [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh
else
  source /usr/share/autojump/autojump.sh
fi

autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit
find /usr/local/etc/bash_completion.d -type f -exec source {} \;
command -v aws_completer &> /dev/null && complete -C $(which aws_completer) aws

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/tmp/google-cloud-sdk/path.zsh.inc' ]; then source '/tmp/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/tmp/google-cloud-sdk/completion.zsh.inc' ]; then source '/tmp/google-cloud-sdk/completion.zsh.inc'; fi

# added by travis gem
[ -f /Users/jonathanturner/.travis/travis.sh ] && source /Users/jonathanturner/.travis/travis.sh
eval "$(direnv hook zsh)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules,.idea,.gradle}/*" 2>/dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
bindkey -s '^p' 'vim $(fzf)^M'
export HOMEBREW_NO_AUTOUPDATE=1
